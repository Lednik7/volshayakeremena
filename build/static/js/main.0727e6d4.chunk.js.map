{"version":3,"sources":["panels/Home.js","panels/Persik.js","img/persik.png","App.js","index.js"],"names":["Home","user","go","realUser","id","vertical","probabilities","header","toFixed","action","size","onClick","x","bridge","send","window","location","hash","Persik","props","useState","currentId","setId","results","Object","keys","filter","startsWith","slice","sort","display","z","currentTarget","innerText","left","value","onChange","console","log","target","split","c","join","map","result","href","App","startState","activePanel","setActivePanel","setUser","popout","setPopout","connect","then","data","catch","e","useEffect","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","dataset","to","onAnimationEnd","icon","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0727e6d4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, Placeholder, List, Footer } from '@vkontakte/vkui';\nimport probabilities from \"../probabilities.json\"; \n\nimport bridge from \"@vkontakte/vk-bridge\"\n\n\nconst Home = ({user, go, realUser}) => (\n\t<Panel id=\"result\">\n\t\t<PanelHeader>Результат</PanelHeader>\n\t\t{/* <Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell>\n\t\t\t\t\n\t\t\t</Cell>\n\t\t</Group> */}\n\n\t\t<Group vertical=\"center\">\n\t\t\t{!probabilities[user] ? \n\t\t\t<Placeholder\n\t\t\t\theader=\"Ошибка 404\"\n\t\t\t\taction={<Button size=\"l\" onClick={x => {window.location.hash = ''; go(x);}} data-to=\"home\">На главную страницу</Button>}>\n\t\t\t\tВам дали неправильную ссылку!\n\t\t\t</Placeholder> : \n\t\t\t<Placeholder\n\t\t\t\theader={`Вероятность победы в полуфинале: ${(probabilities[user] * 100).toFixed(2)}%!`}\n\t\t\t\taction={<Button size=\"l\" onClick={x => {go(x)\t}} data-to=\"home\">На главную страницу</Button>}>\n\t\t\t\tПоздравляем!<br></br>\n\t\t\t\tИз 14 миллионов симуляций ты проходишь в финал в {(probabilities[user] * 14).toFixed(1)} миллионах.<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<Button size=\"l\" onClick={x => {\n\t\t\t\t\tbridge.send(\"VKWebAppShowWallPostBox\", {\n\t\t\t\t\t\t\"message\": \"Вот моя вероятность пройти в финал Большой Перемены!\",\n\t\t\t\t\t\t\"attachments\": `https://vk.com/app7925819/${window.location.hash}`\n\t\t\t\t\t}); \n\t\t\t\t\tgo(x)\n\t\t\t\t}} data-to=\"home\">Поделись своим результатом!</Button>\n\t\t\t\t{/* <Footer>Вероятности посчитаны с предположением, что каждый участник полуфинала наберет о</Footer> */}\n\t\t\t</Placeholder>\n\t\t\t}\n\t\t</Group>\n\t</Panel>\n);\n\n/*\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n*/\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack, List, Cell, Input, Group, Search, SimpleCell, MiniInfoCell, Footer, Link } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport bridge from \"@vkontakte/vk-bridge\"\n\nimport probabilities from \"../probabilities.json\"; \nimport './Persik.css';\n\nconst Persik = props => {\n\tconst [currentId, setId] = useState(null);\n\t// const [probs, setProbs] = useState(null);\n\t// if(probs === null) {\n\t\t// probs = probabilities\n\t// }\n\tconst changeId = x => {\n\t\tconsole.log(x.target.value)\n\t\tsetId(x.target.value.split('').filter(c => c >= '0' && c <= '9').join(''));\n\t}\n\n\tlet results = Object.keys(probabilities).filter(x => x.startsWith(currentId)).slice(0, 10).sort()\n\tif(!currentId)  results = [\t]\n\n\tconst display = x => {\n\t\tconst z = x.currentTarget.innerText\n\t\t// console.log(z)\n\t\twindow.location.hash = z;\n\t\tprops.go(x);\n\t\t// bridge.send(\"VKWebAppStorageSet\", {\"key\": \"userId\", \"value\": z}).then(x => console.log(x));\n\t}\n\n\treturn <Panel id=\"persik\">\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tПоиск\n\t\t</PanelHeader>\n\n\t\t<Group>\n\n\t\t\t\t<Search \n\t\t\t\t\t\t\t\t\tvalue={currentId ? currentId : ''}\n\t\t\t\t\t\t\t\t\tonChange={changeId}/>\n\n\t\t\t\t{results.map((result) => <SimpleCell key={result} onClick={display} data-to=\"result\">{result}</SimpleCell>)}\n\t\t\t\t{!!currentId ? '' : <Footer>Начните вводить ID из <Link href=\"https://bolshayaperemena.online/auth/signin\">личного кабинета</Link></Footer>}\n\t\t</Group>\n\n\t\t{/* <img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/> */}\n\t</Panel>\n}\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport bridge from \"@vkontakte/vk-bridge\"\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, Separator, Link } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, Placeholder} from '@vkontakte/vkui';\nimport { Icon56NotePenOutline, Icon96NotePenOutline, Icon56MessageOutline } from \"@vkontakte/icons\"\n\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport probabilities from \"./probabilities.json\"; \n\nconst App = () => {\n\tlet startState = \"home\"\n\tif(!!window.location.hash) {\n\t\tstartState = \"result\"\n\t}\n\tconst [activePanel, setActivePanel] = useState(startState);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\tconst [realUser, setRealUser] = useState(null);\n\n    // bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 20, \"offset\": 0}).then(x => {\n\t\t// x.data.keys.includes(\"userId\")\n\t// });\n\tconnect.send(\"VKWebAppStorageGet\", {\"keys\": [\"userId\"]}).then(x => {\n\t\tconsole.log('f')\n\t\tconsole.log(x.data.keys[0].value)\n\t}).catch(e => {\n\t\tconsole.log(e)\n\t});\n\n\t// console.log(popout)\n\t\n\tuseEffect(() => {\n\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t// asy\tnc function fetchData() {\n\t\t\t// console.log(\"FRGRE\")\t\n\t\t bridge.send('VKWebAppGetUserInfo').then(user => {\n\t\t\tconsole.log('fregvsrdvgrs')\n\t\t\t\tsetUser(user);\n\t\t\t\tsetPopout(null);\n\t\t\t}).catch((e) => {\n\t\t\t\tconsole.log('fregvsrdv')\n\t\t\t\tconsole.log(e)\n\t\t\t})\n\t\t// }\n\t\t// fetchData();\n\t}, []);\n\n\t// const [act, setAct] = useState();\n\tconst go = e => {\n\t\t// act ;\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\t// setActivePanel(\"persik\")\n\t};\n\t/*\n\t\n\t\t\t\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\n\n\t\t\t\t\t<Group header={<Header mode=\"secondary\"></Header>}>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go}>\n\t\t\t\t\t\t\t\tПройти тест\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t</Group>\n\t*/\n\tconst reload = () => {\n\t\tif(activePanel == \"home\") {\n\t\t\twindow.location.hash = '';\n\t\t}\n\t}\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout} onAnimationEnd={reload}>\n\t\t\t\t\t<Home id=\"result\" user={window.location.hash.slice(1)} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t<Panel id=\"home\">\n\t\t\t\t\t\t<PanelHeader>Мы вместе!</PanelHeader>\n\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t<Placeholder\n\t\t\t\t\t\t\t\ticon={<Icon56NotePenOutline />}\n\t\t\t\t\t\t\t\theader=\"Узнай вероятность прохождения в финал конкурса!\"\n\t\t\t\t\t\t\t\taction={<Button size=\"l\" onClick={go} data-to=\"persik\">Узнать!</Button>}>\n\t\t\t\t\t\t\t\tУкажи свой ID из <Link href=\"https://bolshayaperemena.online/auth/signin\">личного кабинета БП</Link> и получи результат\n\t\t\t\t\t\t\t</Placeholder>\n\t\t\t\t\t\t\t<Separator></Separator>\n\t\t\t\t\t\t\t<Placeholder\n\t\t\t\t\t\t\t\ticon={<Icon56MessageOutline />}\n\t\t\t\t\t\t\t\theader=\"Оcтавить отзыв\"\n\t\t\t\t\t\t\t\taction={<Button size=\"l\" target=\"_blank\"\n\t\t\t\t\t\t\t\thref=\"https://vk.me/join/AJQ1d_VNphzWtHR9rW/XM85l\">Написать</Button>}>\n\t\t\t\t\t\t\t\tПоделитесь обратной связью о приложении\n\t\t\t\t\t\t\t</Placeholder>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}